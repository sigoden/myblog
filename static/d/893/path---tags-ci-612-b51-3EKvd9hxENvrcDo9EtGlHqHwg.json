{"data":{"site":{"siteMetadata":{"pageSize":10,"pageScrollLoadThreshold":300,"githubUrl":"https://github.com/sigoden"}},"allMarkdownRemark":{"totalCount":2,"edges":[{"node":{"excerpt":"Electron 是一款可以通过 Web 技术构建跨平台桌面应用的框架。它将 Chromium 和 Node.js 的事件循环整合在一起，并提供了一些与原生系统交互的 API。 通过 Electron，我们可以使用自己所熟悉的前端技术轻松构建出一款能运行在 Windows…","fields":{"slug":"/build-and-publish-electron-app-with-ci/"},"frontmatter":{"tags":["howto","ci","electron"],"excerpt":"通过 Electron，我们可以使用自己所熟悉的前端技术轻松构建出一款能运行在 Windows, Linux 和 Mac 上的桌面级应用程序。本文将介绍一种简单高效的方法构建并发布安装包。","draft":null,"title":"使用 CI 构建和发布 electron 应用","date":"August 16, 2017"}}},{"node":{"excerpt":"WEBHOOK 介绍 Webhook 允许第三方应用监听 WEB 服务中的特定事件，在这些事件发生时通过 HTTP POST 方式通知 ( 超时 5 秒） 到第三方应用指定的 Web URL。 例如项目有新的内容 Push，或是 Merge Request…","fields":{"slug":"/webhook-deploy/"},"frontmatter":{"tags":["howto","ci","nodejs"],"excerpt":"如何有一种机制，直接克隆提交到仓储的代码，进行测试并部署，生活将方便很多。这种机制是存在的，名为 webhook。","draft":null,"title":"使用 webhook 自动部署","date":"July 21, 2017"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"tag":"ci"}}