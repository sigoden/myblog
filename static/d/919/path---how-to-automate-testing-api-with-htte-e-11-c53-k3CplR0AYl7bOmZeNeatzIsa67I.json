{"data":{"site":{"siteMetadata":{"title":"Sigoden | Blog","siteUrl":"https://blog.sigoden.com","siteAuthor":"sigoden","githubUrl":"https://github.com/sigoden"}},"markdownRemark":{"html":"<p>本文将以一款超简单的博客应用为例子，介绍如何使用 Htte 进行 API 接口的自动化测试。</p>\n<h2 id=\"htte-介绍\"><a href=\"#htte-%E4%BB%8B%E7%BB%8D\" aria-label=\"htte 介绍 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Htte 介绍</h2>\n<p><a href=\"https://github.com/sigoden/htte\">Htte</a> 是一款自动化测试框架。它允许你使用 YAML 编写测试，不需要编写代码。 难度低，上手快。</p>\n<p>编写一个测试就是罗列出请求数据以及预期的响应数据。htte 会自动为你生成请求，并验证响应数据是否匹配预期。</p>\n<p>它提供插件，没有什么数据是生成和表示不了的，没有什么数据是无法校验和比对的，没有什么场景是测试不了。</p>\n<p>接口自动化测试中，测试中使用来自其它测试的数据一直是难言的痛。Postman 通过环境变量处理这个问题，繁琐又容易出错，Htte 创新独到\n地采用会话和路径引用数据处理这个问题，安全而简便。</p>\n<p>Htte 是一款优秀的接口自动化测试工具，值得大家一试。</p>\n<h2 id=\"安装\"><a href=\"#%E5%AE%89%E8%A3%85\" aria-label=\"安装 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装</h2>\n<p>使用 npm 安装 htte 命令行:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -g htte</code></pre></div>\n<h2 id=\"接口详情\"><a href=\"#%E6%8E%A5%E5%8F%A3%E8%AF%A6%E6%83%85\" aria-label=\"接口详情 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>接口详情</h2>\n<p>有这样一款超简单的博客应用。它只有四个接口。</p>\n<ul>\n<li>登录接口</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">功能: 用户登录\n请求路径: localhost:3000/login\n请求方法: POST\n请求头: { &quot;Content-Type&quot;: &quot;application/json&quot; }\n请求数据: {&quot;username&quot;: &quot;john&quot;, &quot;password&quot;: &quot;johnsblog&quot;}\n响应:\n  - 状况: 用户名和密码正确\n    响应状态码： 200\n    响应数据: {&quot;name&quot;: &quot;john&quot;, &quot;token&quot;: &quot;...&quot;}\n  - 状况: 用户名或密码不正确\n    响应状态码： 401\n    响应数据: {&quot;errcode&quot;: 11001, &quot;message&quot;: &quot;invalid username or password&quot;}</code></pre></div>\n<ul>\n<li>添加博文</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">功能: 添加博文\n请求路径: localhost:3000/articles\n请求方法: POST\n请求头: { &quot;Content-Type&quot;: &quot;application/json&quot;, &quot;Authorization&quot;: &quot;Bearer ...&quot; }\n请求数据: &gt;\n  {\n    &quot;title&quot;: &quot;How to use htte&quot;,\n    &quot;content&quot;: &quot;htte is ....&quot;,\n    &quot;tags&quot;: [&quot;howto&quot;, &quot;htte&quot;]\n  }\n响应:\n  - 状况: 添加成功\n    响应状态码： 200\n    响应数据: &gt;\n      {\n        &quot;title&quot;: &quot;How to use htte&quot;,\n        &quot;slug&quot;: &quot;how-to-use-htte-A43bcF&quot;,\n        &quot;content&quot;: &quot;htte is ....&quot;,\n        &quot;tags&quot;: [&quot;howto&quot;, &quot;htte&quot;],\n        &quot;createdAt&quot;: &quot;2018-04-28T07:35:08.471Z&quot;\n      }</code></pre></div>\n<ul>\n<li>编辑博文</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">功能: 编辑博文\n请求路径: localhost:3000/article/how-to-use-htte-A43b\n请求方法: PUT\n请求头: { &quot;Content-Type&quot;: &quot;application/json&quot;, &quot;Authorization&quot;: &quot;Bearer ...&quot; }\n请求数据: &gt;\n  {\n    &quot;title&quot;: &quot;How to create htte plugin&quot;,\n    &quot;content&quot;: &quot;htte plugin is ....&quot;,\n    &quot;tags&quot;: [&quot;howto&quot;, &quot;htte&quot;, &quot;plugin&quot;]\n  }\n响应:\n  - 状况: 编辑成功\n    响应状态码： 200\n    响应数据: &gt;\n      {\n        &quot;title&quot;: &quot;How to use htte plugin&quot;,\n        &quot;slug&quot;: &quot;how-to-use-htte-A43b&quot;,\n        &quot;content&quot;: &quot;htte plugin is ....&quot;,\n        &quot;tags&quot;: [&quot;howto&quot;, &quot;htte&quot;, &quot;plugin&quot;],\n        &quot;createdAt&quot;: &quot;2018-04-28T07:35:08.471Z&quot;\n      }</code></pre></div>\n<ul>\n<li>获取博文列表</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">功能: 获取所有博文\n请求路径: localhost:3000/articles\n请求方法: GET\n请求头: { &quot;Content-Type&quot;: &quot;application/json&quot;, &quot;Authorization&quot;: &quot;Bearer ...&quot; }\nquerystring: tag=howto\n响应:\n  - 状况: 成功\n    响应状态码： 200\n    响应数据: \n      {\n        &quot;articlesCount&quot;: 1,\n        &quot;articles&quot;: [\n          {\n            &quot;title&quot;: &quot;How to use htte plugin&quot;,\n            &quot;slug&quot;: &quot;how-to-use-htte-A43b&quot;,\n            &quot;content&quot;: &quot;htte plugin is ....&quot;,\n            &quot;tags&quot;: [&quot;howto&quot;, &quot;htte&quot;, &quot;plugin&quot;],\n            &quot;createdAt&quot;: &quot;2018-04-28T07:35:08.471Z&quot;\n          }\n        ]\n      }</code></pre></div>\n<h2 id=\"测试接口\"><a href=\"#%E6%B5%8B%E8%AF%95%E6%8E%A5%E5%8F%A3\" aria-label=\"测试接口 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>测试接口</h2>\n<p>添加配置文件 <code class=\"language-text\">.htte.yaml</code>，描述接口</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span><span class=\"token number\">3000</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> json <span class=\"token comment\"># 使用 json 解压缩请求响应数据</span>\n<span class=\"token key atrule\">apis</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">login</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> post\n    <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> /login\n  <span class=\"token key atrule\">createArticle</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> post\n    <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> /articles\n  <span class=\"token key atrule\">updateArticle</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> put\n    <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> /article/<span class=\"token punctuation\">{</span>slug<span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">listArticles</span><span class=\"token punctuation\">:</span> /articles</code></pre></div>\n<p>添加测试文件 <code class=\"language-text\">blog.yaml</code>，编写测试。</p>\n<h3 id=\"测试登录失败\"><a href=\"#%E6%B5%8B%E8%AF%95%E7%99%BB%E5%BD%95%E5%A4%B1%E8%B4%A5\" aria-label=\"测试登录失败 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>测试登录失败</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">units</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">describe</span><span class=\"token punctuation\">:</span> 登录失败\n    <span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span> login\n    <span class=\"token key atrule\">req</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">body</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> john\n        <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> johnblog\n    <span class=\"token key atrule\">res</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">status</span><span class=\"token punctuation\">:</span> <span class=\"token number\">401</span>\n      <span class=\"token key atrule\">body</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">errcode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">11001</span>\n        <span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@exist</span></code></pre></div>\n<p><code class=\"language-text\">describe</code> 描述测试的目的，该字段会在最好的测试报告中呈现。</p>\n<p><code class=\"language-text\">api</code> 描述被测试的接口，该字段关联配置文件中的接口定义。</p>\n<p><code class=\"language-text\">req</code> 定义请求数据, <code class=\"language-text\">body</code>下的数据会封装到请求体 <code class=\"language-text\">{&quot;username&quot;: &quot;john&quot;, &quot;password&quot;: &quot;johnblog&quot;}</code>。</p>\n<p><code class=\"language-text\">res</code> 期望响应数据。如果与实际响应数据不匹配，会导致测试不通过。</p>\n<p>当 htte 载入这段测试代码，会构造请求，也就是会往 <code class=\"language-text\">http://localhost:3000/login</code> 发送 <code class=\"language-text\">post</code> 请求，\n有请求头 <code class=\"language-text\">{&quot;Content-Type&quot;: &quot;application/json&quot;}</code>, 及请求体 <code class=\"language-text\">{&quot;username&quot;: &quot;john&quot;, &quot;password&quot;: &quot;johnblog&quot;}</code>。\n当服务端响应后，会对响应的数据作如下断言</p>\n<ul>\n<li>响应状态码为 401</li>\n<li>响应体是一个对象</li>\n<li>响应体对象有且仅有两个属性 <code class=\"language-text\">errcode</code> 和 <code class=\"language-text\">message</code></li>\n<li>响应体对象的 <code class=\"language-text\">errcode</code> 属性值为 11001</li>\n<li>响应体对象的 <code class=\"language-text\">message</code> 属性值为 <code class=\"language-text\">invalid username or password</code></li>\n</ul>\n<p>所以断言全部通过，测试才会通过。如响应状态码不为 401 或者响应体中多了其它其它字段，都是不完全匹配，会导致测试失败。</p>\n<h3 id=\"测试登录成功\"><a href=\"#%E6%B5%8B%E8%AF%95%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F\" aria-label=\"测试登录成功 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>测试登录成功</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">describe</span><span class=\"token punctuation\">:</span> 登录成功\n    <span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span> login\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> johnLogin\n    <span class=\"token key atrule\">req</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">body</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> john\n        <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> johnsblog\n    <span class=\"token key atrule\">res</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">body</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> john\n        <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@exist</span></code></pre></div>\n<p><code class=\"language-text\">name</code> 定义测试名称，后续测试可以通过该名称访问该 测试数据，比如响应的 <code class=\"language-text\">token</code> 值。</p>\n<p><code class=\"language-text\">res</code> 中省略了 <code class=\"language-text\">status</code>，并不代表不检查状态码了。对于这种情况 htte 会检查是否状态码在 200-299 范围内。</p>\n<p><code class=\"language-text\">token</code> 的值是变动的，我们检查其具体值。所以使用 YAML 标签 <code class=\"language-text\">!@exist</code> 进行一种特殊的检查。其验证 <code class=\"language-text\">token</code> 字段存在，不校验其具体值。</p>\n<p><code class=\"language-text\">!@exist</code> 由 htte 插件提供。在只关注字段有无而不在意值的情况下使用。</p>\n<h3 id=\"测试添加博文\"><a href=\"#%E6%B5%8B%E8%AF%95%E6%B7%BB%E5%8A%A0%E5%8D%9A%E6%96%87\" aria-label=\"测试添加博文 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>测试添加博文</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">describe</span><span class=\"token punctuation\">:</span> 添加博文成功\n    <span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span> createArticle\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> articleUsehtte\n    <span class=\"token key atrule\">req</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">headers</span><span class=\"token punctuation\">:</span> \n        <span class=\"token key atrule\">Authorization</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!$concat</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Bearer'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token tag\">!$query</span> $$johnLogin.res.body.token<span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">body</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> How to use htte\n        <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> htte is http automation testing tool\n        <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> \n          <span class=\"token punctuation\">-</span> howto\n          <span class=\"token punctuation\">-</span> htte\n    <span class=\"token key atrule\">res</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">body</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> How to use htte\n        <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@regexp</span> /^how<span class=\"token punctuation\">-</span>to<span class=\"token punctuation\">-</span>use<span class=\"token punctuation\">-</span>htte/\n        <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> htte is http automation testing tool\n        <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> \n          <span class=\"token punctuation\">-</span> howto\n          <span class=\"token punctuation\">-</span> htte\n        <span class=\"token key atrule\">createdAt</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@exist</span></code></pre></div>\n<p><code class=\"language-text\">headers</code> 描述请求头。它将向发送的请求头中追加 <code class=\"language-text\">Authorization</code> 头。</p>\n<p>添加博文接口会进行 JWT 权限校验，因此我们需要添加 <code class=\"language-text\">Authorization</code> 头，提供登录 <code class=\"language-text\">token</code>。</p>\n<p>这个 <code class=\"language-text\">token</code> 可以从测试 <code class=\"language-text\">johnLogin</code> 中获取。我们通过标签 <code class=\"language-text\">!$query</code> 引用这个 <code class=\"language-text\">token</code> 值。</p>\n<blockquote>\n<p>htte 会通过会话记录运行过的测试的请求和响应数据，你可以这种方式获取位于你前面的测试的数据。不需要预先定义，只需要定位（访问路径）。</p>\n</blockquote>\n<p>然后使用标签 <code class=\"language-text\">!$concat</code> 拼接 <code class=\"language-text\">Bearer</code> 和 <code class=\"language-text\">token</code> 值得到 <code class=\"language-text\">Authorization</code> 的具体值。</p>\n<p><code class=\"language-text\">slug</code> 表示博文的访问链接，通过 title 拼接一个 4 个字符的随机字符串生成。它也不是一个具体值，所以我们使用 <code class=\"language-text\">!@regexp</code> 进行正这而匹配验证。</p>\n<blockquote>\n<p>大多情况下，测试的请求数据及预期响应数据是可以给定的，但总免不了会碰到一些特殊状况，这是就需要使用插件了。htte 许多内置插件，它们\n应该足够应对绝大多数常见了。如果碰到无法处理的情况，可以发 issue 或编写插件。</p>\n</blockquote>\n<h3 id=\"测试编辑博文\"><a href=\"#%E6%B5%8B%E8%AF%95%E7%BC%96%E8%BE%91%E5%8D%9A%E6%96%87\" aria-label=\"测试编辑博文 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>测试编辑博文</h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">describe</span><span class=\"token punctuation\">:</span> 编辑博文成功\n    <span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span> updateArticle\n    <span class=\"token key atrule\">req</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">headers</span><span class=\"token punctuation\">:</span> \n        <span class=\"token key atrule\">Authorization</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!$concat</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Bearer'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token tag\">!$query</span> $$johnLogin.res.body.token<span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">params</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!$query</span> $$articleUsehtte.res.body.slug\n    <span class=\"token key atrule\">res</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">body</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> How to use htte plugin\n        <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@query</span> $$$req.params.slug\n        <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> htte plugin is flexiabe\n        <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> \n         <span class=\"token punctuation\">-</span> howto\n         <span class=\"token punctuation\">-</span> htte\n         <span class=\"token punctuation\">-</span> plugin\n        <span class=\"token key atrule\">createdAt</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2018-04-28T07:35:08.471Z</span></code></pre></div>\n<p><code class=\"language-text\">params</code> 描述路径参数，该测试的请求路径是 <code class=\"language-text\">/article/{slug}</code>，带有路径参数 slug,\n发送请求前 htte 会将替换成 <code class=\"language-text\">params</code> 中对应的值，最终的请求路径是 <code class=\"language-text\">/article/how-to-use-htte-A43bcF</code></p>\n<p><code class=\"language-text\">!@query</code> 标签检验响应值是否某个引用值相等，用来判断更新文章或 slug 是否改变。</p>\n<h3 id=\"测试获取博文列表\"><a href=\"#%E6%B5%8B%E8%AF%95%E8%8E%B7%E5%8F%96%E5%8D%9A%E6%96%87%E5%88%97%E8%A1%A8\" aria-label=\"测试获取博文列表 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>测试获取博文列表</h3>\n<h4 id=\"获取我的所有博文\"><a href=\"#%E8%8E%B7%E5%8F%96%E6%88%91%E7%9A%84%E6%89%80%E6%9C%89%E5%8D%9A%E6%96%87\" aria-label=\"获取我的所有博文 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>获取我的所有博文</h4>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">describe</span><span class=\"token punctuation\">:</span> 获取我的所有博文\n    <span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span> listArticles\n    <span class=\"token key atrule\">req</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">headers</span><span class=\"token punctuation\">:</span> \n        <span class=\"token key atrule\">Authorization</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!$concat</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Bearer'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token tag\">!$query</span> $$johnLogin.res.body.token<span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">res</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">body</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">articlesCount</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@exist</span>\n        <span class=\"token key atrule\">articles</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@array</span>\n          <span class=\"token key atrule\">0</span><span class=\"token punctuation\">:</span> \n            <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> How to use htte plugin\n            <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@regexp</span> /^how<span class=\"token punctuation\">-</span>to<span class=\"token punctuation\">-</span>use<span class=\"token punctuation\">-</span>htte/\n            <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> htte plugin is flexiabe\n            <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> \n              <span class=\"token punctuation\">-</span> howto\n              <span class=\"token punctuation\">-</span> htte\n              <span class=\"token punctuation\">-</span> plugin\n            <span class=\"token key atrule\">createdAt</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@exist</span></code></pre></div>\n<p><code class=\"language-text\">!@array</code> 要特别注意。Htte 常规状态下比对数组时，会先比对元素个数，在逐一比对个元素。\n而 <code class=\"language-text\">articles</code> 可能是一个长度不固定的数组，，这种状况下进行常规比对没有意义。\n使用 <code class=\"language-text\">!@array</code> 自定义数组比对行为，使其仅比对特定的元素，比如该测试中，就表示仅对第一个元素进行比对，忽略其它元素。\n如果该元素匹配，则测试通过。</p>\n<h4 id=\"通过标签筛选我的博文\"><a href=\"#%E9%80%9A%E8%BF%87%E6%A0%87%E7%AD%BE%E7%AD%9B%E9%80%89%E6%88%91%E7%9A%84%E5%8D%9A%E6%96%87\" aria-label=\"通过标签筛选我的博文 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>通过标签筛选我的博文</h4>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">describe</span><span class=\"token punctuation\">:</span> 通过标签赛选我的博文\n    <span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span> listArticles\n    <span class=\"token key atrule\">req</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">headers</span><span class=\"token punctuation\">:</span> \n        <span class=\"token key atrule\">Authorization</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!$concat</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Bearer'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token tag\">!$query</span> $$johnLogin.res.body.token<span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">query</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">tag</span><span class=\"token punctuation\">:</span> howto\n    <span class=\"token key atrule\">res</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">body</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">articlesCount</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@exist</span>\n        <span class=\"token key atrule\">articles</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@array</span>\n          <span class=\"token key atrule\">0</span><span class=\"token punctuation\">:</span> \n            <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> How to use htte plugin\n            <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@regexp</span> /^how<span class=\"token punctuation\">-</span>to<span class=\"token punctuation\">-</span>use<span class=\"token punctuation\">-</span>htte/\n            <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> htte plugin is flexiabe\n            <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> \n              <span class=\"token punctuation\">-</span> howto\n              <span class=\"token punctuation\">-</span> htte\n              <span class=\"token punctuation\">-</span> plugin\n            <span class=\"token key atrule\">createdAt</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!@exist</span></code></pre></div>\n<p><code class=\"language-text\">query</code> 描述 querystring, 测时的 url 将变成 <code class=\"language-text\">http://localhost:3000/articles?tag=howto</code>。</p>\n<h2 id=\"命令行\"><a href=\"#%E5%91%BD%E4%BB%A4%E8%A1%8C\" aria-label=\"命令行 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>命令行</h2>\n<p>保证 Web 可用的情况下，在文件 <code class=\"language-text\">.htte.yaml</code> 和 <code class=\"language-text\">blog.yaml</code> 所在的目录，执行命令 <code class=\"language-text\">htte</code>, htte 会逐一执行测试。\n并打印测试执行的结果。</p>\n<p>一些 htte 命令行有些实用技巧：</p>\n<ul>\n<li>某个测试失败时暂停执行</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">htte --bail </code></pre></div>\n<ul>\n<li>从上次失败的地方开始执行, 适合接口调试</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">htte --bail --amend</code></pre></div>\n<ul>\n<li>仅运行指定测试</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">htte --unit blog-articleUsehtte --shot</code></pre></div>\n<ul>\n<li>显示调试信息，将同步打印请求响应数据</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">htte --debug</code></pre></div>\n<h2 id=\"结论\"><a href=\"#%E7%BB%93%E8%AE%BA\" aria-label=\"结论 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>结论</h2>\n<p>通过这个仅仅 4 接口的博客应用接口测试案例，你应该很很熟悉 Htte 了，就是这么简单。\nHtte 自动生成数据，发送请求，比对响应数据，编排测试用例并逐一执行，打印报告。</p>\n<p>所谓测试就是使用 YAML 描述接口的请求和响应。对于描述不了的极少部分场景提供了插件。\n即享有描述性策略编写测试的优越性，又持有插件带来的灵活性。</p>\n<p>项目地址: <a href=\"https://github.com/sigoden/htte\">https://github.com/sigoden/htte</a></p>","excerpt":"本文将以一款超简单的博客应用为例子，介绍如何使用 Htte 进行 API 接口的自动化测试。 Htte 介绍 Htte  是一款自动化测试框架。它允许你使用 YAML 编写测试，不需要编写代码。 难度低，上手快。 编写一个测试就是罗列出请求数据以及预期的响应数据。htte…","timeToRead":6,"headings":[{"value":"Htte 介绍","depth":2},{"value":"安装","depth":2},{"value":"接口详情","depth":2},{"value":"测试接口","depth":2},{"value":"测试登录失败","depth":3},{"value":"测试登录成功","depth":3},{"value":"测试添加博文","depth":3},{"value":"测试编辑博文","depth":3},{"value":"测试获取博文列表","depth":3},{"value":"获取我的所有博文","depth":4},{"value":"通过标签筛选我的博文","depth":4},{"value":"命令行","depth":2},{"value":"结论","depth":2}],"frontmatter":{"title":"基于 Htte 的 API 自动化测试","notoc":null,"excerpt":"本文将以一款超简单的博客应用为例子，介绍如何使用 Htte 进行 API 接口的自动化测试","date":"April 28th 2018","rawDate":"2018-04-28"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/how-to-automate-testing-api-with-htte/","prev":{"fields":{"slug":"/dockerda-jian-mongodbfu-zhi-ji-2/"},"frontmatter":{"title":"Docker 搭建 mongodb 复制集","draft":null,"tags":["howto","mongo","docker"]}},"next":{"fields":{"slug":"/how-to-use-gatsby/"},"frontmatter":{"title":"使用 Gatsby 创建静态站点","draft":null,"tags":["howto","react","graphql"]}}}}