{"data":{"site":{"siteMetadata":{"title":"Sigoden | Blog","siteUrl":"https://blog.sigoden.com","siteAuthor":"sigoden","githubUrl":"https://github.com/sigoden"}},"markdownRemark":{"html":"<h2 id=\"试错环境\"><a href=\"#%E8%AF%95%E9%94%99%E7%8E%AF%E5%A2%83\" aria-label=\"试错环境 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>试错环境</h2>\n<p>文本的解析规则的编写相对来说还是挺复杂的，我们需要搭建一个调试环境，以便我们试错。</p>\n<p>配置 logstash 从标准终端输入中读取数据，grok 解析后，rubydebug 编码后打印到标准终端。</p>\n<p>对应配置文件 logstash.conf 如下</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">input {\n\tstdin {\n\t}\n}\n\nfilter {\n\tgrok {\n\t\tmatch =&gt; {\n\t\t\t&quot;message&quot; =&gt; &#39;%{DATA}&#39;\n\t\t}\n\t}\n}\n\noutput {\n  stdout { codec =&gt; rubydebug }\n}</code></pre></div>\n<p>Logstash 进行了分层设计，input 模块进行日志接受，filters 模块进行日志处理，output 模块进行日志转发，此外还提供了 codecs 模块可以对输入输出信息进行编码解码。各层在配置中也存在着对应。</p>\n<p>rubydebug 用来输出结构化数据。</p>\n<p>启动 logstash</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">logstash -f logstash.conf</code></pre></div>\n<p>logstash 成功启动后，终端中输入</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">hello</code></pre></div>\n<p>logstash 将打印</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    &quot;@timestamp&quot; =&gt; 2017-04-08T03:08:10.999Z,\n      &quot;@version&quot; =&gt; &quot;1&quot;,\n          &quot;host&quot; =&gt; &quot;612edb7645b3&quot;,\n       &quot;message&quot; =&gt; &quot;hello&quot;,\n          &quot;tags&quot; =&gt; []\n}</code></pre></div>\n<p>整个试错环境运行成功</p>\n<h2 id=\"解析规则\"><a href=\"#%E8%A7%A3%E6%9E%90%E8%A7%84%E5%88%99\" aria-label=\"解析规则 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解析规则</h2>\n<h3 id=\"正则规则\"><a href=\"#%E6%AD%A3%E5%88%99%E8%A7%84%E5%88%99\" aria-label=\"正则规则 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>正则规则</h3>\n<p>grok 使用的是 <a href=\"https://raw.githubusercontent.com/kkos/oniguruma/master/doc/RE\">Oniguruma 正则</a> 来解析文本</p>\n<h3 id=\"命名正则\"><a href=\"#%E5%91%BD%E5%90%8D%E6%AD%A3%E5%88%99\" aria-label=\"命名正则 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>命名正则</h3>\n<p>命名正则顾名思义就是定义了名字的正则规则</p>\n<p>logstash 内置了一些<a href=\"https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns\">命名正则</a></p>\n<p><strong>定义</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">DATA .*?</code></pre></div>\n<p>给规则<code class=\"language-text\">.*?</code>命名 DATA。</p>\n<p><strong>命名正则用法</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">%{SYNTAX:SEMANTIC:TYPE}\n\n# 例子\n# %{INT:count:int}\n# %{Number:rate:float}\n# %{DATA:upstream}\n# %{DATA}</code></pre></div>\n<ul>\n<li>SYNTAX: 命名正则</li>\n<li>SEMANTIC: 通过正则解析出来的结构化数据对应的键值，省略时表示仅匹配但不做解析</li>\n<li>TYPE: 通过正则解析出来的结构化数据对应的类型，省略时表示类型为字符串，当前支持的可选值为 int 和 float</li>\n</ul>\n<p><strong>实例</strong></p>\n<p>修改<code class=\"language-text\">logstash.conf</code>中的 message 字段</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;message&quot; =&gt; &#39;%{INT:count:int}&#39;</code></pre></div>\n<p>重启 logstash 后，终端输入<code class=\"language-text\">3</code></p>\n<p>可以看到输出</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    &quot;@timestamp&quot; =&gt; 2017-04-08T03:39:40.205Z,\n      &quot;@version&quot; =&gt; &quot;1&quot;,\n          &quot;host&quot; =&gt; &quot;612edb7645b3&quot;,\n         &quot;count&quot; =&gt; 3,\n       &quot;message&quot; =&gt; &quot;3&quot;,\n          &quot;tags&quot; =&gt; []\n}</code></pre></div>\n<p>输出中多了一个字段<code class=\"language-text\">count</code>, 其值为<code class=\"language-text\">3</code>。grok 解析并添加字段 count, 其值为整数 3</p>\n<h3 id=\"直接使用正则\"><a href=\"#%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99\" aria-label=\"直接使用正则 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>直接使用正则</h3>\n<p>除了使用命名正则外，我们也可以直接使用正则</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;message&quot; =&gt; &#39;[0-9]+&#39;</code></pre></div>\n<p>如果需要提取数据到结构化对象中，可以使用如下规则</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(?&lt;SEMANTIC&gt;RULE)\n\n# e.g\n(?&lt;count&gt;[0-9]+)</code></pre></div>\n<p>配置 logstash.conf</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;message&quot; =&gt; &#39;(?&lt;count&gt;[0-9]+)&#39;</code></pre></div>\n<p>重启后输入<code class=\"language-text\">3</code></p>\n<p>logstash 打印</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    &quot;@timestamp&quot; =&gt; 2017-04-08T04:17:33.670Z,\n      &quot;@version&quot; =&gt; &quot;1&quot;,\n          &quot;host&quot; =&gt; &quot;612edb7645b3&quot;,\n         &quot;count&quot; =&gt; &quot;3&quot;,\n       &quot;message&quot; =&gt; &quot;3&quot;,\n          &quot;tags&quot; =&gt; []\n}</code></pre></div>\n<h2 id=\"实战\"><a href=\"#%E5%AE%9E%E6%88%98\" aria-label=\"实战 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实战</h2>\n<p>下面进行 nginx 错误日志解析</p>\n<p><strong>参考日志数据</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2017/04/08 00:48:07 [error] 24175#24175: *573179 open() &quot;/www/README.html&quot; failed (2: No such file or directory), client: 220.181.51.93, server: www.baicaiyun.cn, request: &quot;GET /README.html HTTP/1.1&quot;, host: &quot;www.example.com&quot;\n\n2017/04/07 18:09:33 [error] 24174#24174: *571806 connect() failed (111: Connection refused) while connecting to upstream, client: 113.99.120.208, server: www.example.com, request: &quot;GET /api/user/3332432/info HTTP/1.1&quot;, upstream: &quot;http://10.46.122.16:8081/v1/ordersheet/3332432/info&quot;, host: &quot;www.example.com&quot;, referrer: &quot;http://www.example.com/user&quot;</code></pre></div>\n<p><strong>分析上面数据</strong></p>\n<ul>\n<li>时间：<code class=\"language-text\">2017/04/07 18:09:33</code>, 需要结构化<code class=\"language-text\">timestamp =&gt; 2017/04/07 18:09:33</code></li>\n<li>错误级别：<code class=\"language-text\">[error]</code>, 需要结构化<code class=\"language-text\">severity =&gt; error</code></li>\n<li>进程信息：<code class=\"language-text\">24175#24175</code>, 不需要结构化</li>\n<li>错误信息：<code class=\"language-text\">*573179 open() &quot;/www/README.html&quot; failed (2: No such file or directory),</code>　需要结构化<code class=\"language-text\">errormessage =&gt; *573179 open() &quot;/www/README.html&quot; failed (2: No such file or directory)</code></li>\n<li>客户端 IP: <code class=\"language-text\">client: 220.181.51.93,</code>, 需要结构化<code class=\"language-text\">clientip =&gt; 220.181.51.93</code></li>\n<li>服务名：<code class=\"language-text\">server: www.example.com</code>, 需要结构化<code class=\"language-text\">server =&gt; www.example.com</code></li>\n<li>上行『可选』: <code class=\"language-text\">upstream: &quot;http://10.46.122.16:8081/v1/ordersheet/3332432/info&quot;,</code>, 不需要结构化</li>\n<li>访问域名：<code class=\"language-text\">host: &quot;www.example.com&quot;</code>, 需要结构化<code class=\"language-text\">hostname =&gt; www.example.com</code></li>\n<li>Referrer『可选』: <code class=\"language-text\">, referrer: &quot;http://www.example.com/user&quot;</code>, 需要结构化<code class=\"language-text\">referrer =&gt; http://www.example.com/use</code></li>\n</ul>\n<p><strong>编写正则规则</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;message&quot; =&gt; &#39;(?&lt;timestamp&gt;%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME}) \\[%{LOGLEVEL:severity}\\] %{POSINT}#%{NUMBER}: %{GREEDYDATA:errormessage}, client: %{IP:clientip}, server: %{DATA}, request: \\&quot;%{WORD:verb} %{GREEDYDATA:request} HTTP/%{NUMBER:httpversion}\\&quot;(?:, upstream: \\&quot;%{DATA}\\&quot;)?, host: \\&quot;%{HOSTNAME:hostname}\\&quot;(?:, referrer: \\&quot;%{DATA:referrer}\\&quot;)?&#39;</code></pre></div>\n<p>第一条数据解析结果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n        &quot;severity&quot; =&gt; &quot;error&quot;,\n    &quot;errormessage&quot; =&gt; &quot;*573179 open() \\&quot;/www/README.html\\&quot; failed (2: No such file or directory)&quot;,\n         &quot;request&quot; =&gt; &quot;/README.html&quot;,\n            &quot;verb&quot; =&gt; &quot;GET&quot;,\n         &quot;message&quot; =&gt; &quot;2017/04/08 00:48:07 [error] 24175#24175: *573179 open() \\&quot;/www/README.html\\&quot; failed (2: No such file or directory), client: 220.181.51.93, server: www.baicaiyun.cn, request: \\&quot;GET /README.html HTTP/1.1\\&quot;, host: \\&quot;www.example.com\\&quot;&quot;,\n            &quot;tags&quot; =&gt; [],\n        &quot;hostname&quot; =&gt; &quot;www.example.com&quot;,\n      &quot;@timestamp&quot; =&gt; 2017-04-08T04:41:52.336Z,\n        &quot;clientip&quot; =&gt; &quot;220.181.51.93&quot;,\n        &quot;@version&quot; =&gt; &quot;1&quot;,\n            &quot;host&quot; =&gt; &quot;612edb7645b3&quot;,\n     &quot;httpversion&quot; =&gt; &quot;1.1&quot;,\n       &quot;timestamp&quot; =&gt; &quot;2017/04/08 00:48:07&quot;\n}</code></pre></div>\n<p>第二条数据解析结果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n        &quot;severity&quot; =&gt; &quot;error&quot;,\n    &quot;errormessage&quot; =&gt; &quot;*571806 connect() failed (111: Connection refused) while connecting to upstream&quot;,\n         &quot;request&quot; =&gt; &quot;/api/user/3332432/info&quot;,\n            &quot;verb&quot; =&gt; &quot;GET&quot;,\n         &quot;message&quot; =&gt; &quot;2017/04/07 18:09:33 [error] 24174#24174: *571806 connect() failed (111: Connection refused) while connecting to upstream, client: 113.99.120.208, server: www.example.com, request: \\&quot;GET /api/user/3332432/info HTTP/1.1\\&quot;, upstream: \\&quot;http://10.46.122.16:8081/v1/ordersheet/3332432/info\\&quot;, host: \\&quot;www.example.com\\&quot;, referrer: \\&quot;http://www.example.com/user\\&quot;&quot;,\n            &quot;tags&quot; =&gt; [],\n        &quot;referrer&quot; =&gt; &quot;http://www.example.com/user&quot;,\n        &quot;hostname&quot; =&gt; &quot;www.example.com&quot;,\n      &quot;@timestamp&quot; =&gt; 2017-04-08T04:48:36.250Z,\n        &quot;clientip&quot; =&gt; &quot;113.99.120.208&quot;,\n        &quot;@version&quot; =&gt; &quot;1&quot;,\n            &quot;host&quot; =&gt; &quot;612edb7645b3&quot;,\n     &quot;httpversion&quot; =&gt; &quot;1.1&quot;,\n       &quot;timestamp&quot; =&gt; &quot;2017/04/07 18:09:33&quot;\n}</code></pre></div>","excerpt":"试错环境 文本的解析规则的编写相对来说还是挺复杂的，我们需要搭建一个调试环境，以便我们试错。 配置 logstash 从标准终端输入中读取数据，grok 解析后，rubydebug 编码后打印到标准终端。 对应配置文件 logstash.conf 如下 Logstash…","timeToRead":4,"headings":[{"value":"试错环境","depth":2},{"value":"解析规则","depth":2},{"value":"正则规则","depth":3},{"value":"命名正则","depth":3},{"value":"直接使用正则","depth":3},{"value":"实战","depth":2}],"frontmatter":{"title":"探究 logstash grok 文本解析","notoc":null,"excerpt":"Logstash 常用于 ELK 栈(在日志处理领域被广泛使用), 主要负责数据的收集，处理，转发。而 grok 是 filters 模块中一个文本正则解析插件。只有理解了 grok, 我们才能从容应对各种各样的日志内容，本文结合实例详细分析了如何使用 grok。","date":"April 7th 2017","rawDate":"2017-04-07"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/logstash-grok-wen-ben-jie-xi/","prev":{"fields":{"slug":"/socket-iozhi-san-shen-ru-xue-xi/"},"frontmatter":{"title":"socket.io 系列三：深入学习","draft":null,"tags":["howto","socket.io","javascript"]}},"next":{"fields":{"slug":"/javascriptbiao-zhun-dai-ma-feng-ge/"},"frontmatter":{"title":"我们该以何种风格写 javascript","draft":null,"tags":["option","javascript"]}}}}