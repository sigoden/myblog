{"data":{"site":{"siteMetadata":{"title":"Sigoden | Blog","siteUrl":"https://blog.sigoden.com","siteAuthor":"sigoden","githubUrl":"https://github.com/sigoden"}},"markdownRemark":{"html":"<h2 id=\"你需要一份代码风格\"><a href=\"#%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B8%80%E4%BB%BD%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC\" aria-label=\"你需要一份代码风格 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>你需要一份代码风格</h2>\n<p>良好的代码风格，不仅仅有助于自己在以后阅读的时候能够方便简单的读懂，也是方便他人阅读理解。尤其是在团队合作的时候，如果每个人都很随意的自己用自己的方式，不仅不好维护，互相也不能理解代码意思。这样反而拖延工作量，浪费时间，降低效率。不同的代码风格严重时也可能造成纷争，影响团队和谐。</p>\n<h2 id=\"你需要代码检查工具\"><a href=\"#%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5%E5%B7%A5%E5%85%B7\" aria-label=\"你需要代码检查工具 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>你需要代码检查工具</h2>\n<p>代码风格如果不被遵守，就完全没有意义。如何确保每个人写出来的代码都符合你所定义的风格，这就需要工具了。eslint 是 javascript 社区最优秀的代码风格检查工具。它提供了一套相当完善的插件机制，可以自由的扩展，动态加载配置规则，同时可以方便的根据报错定位到具体的规则配置。每一条代码风格都是可以通过 eslint 配置的。</p>\n<h2 id=\"你需要强制你的项目使用一种风格\"><a href=\"#%E4%BD%A0%E9%9C%80%E8%A6%81%E5%BC%BA%E5%88%B6%E4%BD%A0%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8%E4%B8%80%E7%A7%8D%E9%A3%8E%E6%A0%BC\" aria-label=\"你需要强制你的项目使用一种风格 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>你需要强制你的项目使用一种风格</h2>\n<p>比选则代码风格更重要的是坚持。只有坚守一种代码风格，我们才能享受到统一的便利。如何强制大家使用一份代码风格呢？</p>\n<ul>\n<li>如果使用 webpack, 需要再 webpack 中配置 eslint</li>\n<li>在 package.json 中添加钩子如 pretest, prebuild, prepublish, 强制在特点操作前运行 eslint 检查代码风格。</li>\n</ul>\n<h2 id=\"常用代码风格\"><a href=\"#%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC\" aria-label=\"常用代码风格 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>常用代码风格</h2>\n<ul>\n<li><a href=\"https://standardjs.com/\">standard</a></li>\n<li><a href=\"https://github.com/airbnb/javascript\">aribnb</a></li>\n<li><a href=\"https://github.com/google/eslint-config-google\">google</a></li>\n</ul>\n<p>这里分享一个技巧:</p>\n<p>在配置完成之后，如果检查发现问题，可以尝试通过 <code class=\"language-text\">eslint --fix</code> 自动修复一下代付风格方面的错误。</p>","excerpt":"…","timeToRead":1,"headings":[{"value":"你需要一份代码风格","depth":2},{"value":"你需要代码检查工具","depth":2},{"value":"你需要强制你的项目使用一种风格","depth":2},{"value":"常用代码风格","depth":2}],"frontmatter":{"title":"我们该以何种风格写 javascript","notoc":null,"excerpt":"JavaScript 是一种多范式的灵活的动态语言，为了强化协作，我们常常需要再项目中选定一种风格，如何选择呢？","date":"April 6th 2017","rawDate":"2017-04-06"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/javascriptbiao-zhun-dai-ma-feng-ge/","prev":{"fields":{"slug":"/logstash-grok-wen-ben-jie-xi/"},"frontmatter":{"title":"探究 logstash grok 文本解析","draft":null,"tags":["howto","elk","grok","logstash"]}},"next":{"fields":{"slug":"/shell-can-shu-ti-huan/"},"frontmatter":{"title":"BashScript 参数替换完全指南","draft":null,"tags":["guide","linux","bash"]}}}}